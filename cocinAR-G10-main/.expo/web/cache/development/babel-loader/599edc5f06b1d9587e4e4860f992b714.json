{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { t, color } from 'react-native-tailwindcss';\nimport Input from \"../Components/Input\";\nimport Button from \"../Components/Button\";\nimport { useForm, Controller } from 'react-hook-form';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { login } from \"../controller/user.controller\";\nimport { getBestRecipes, getRecipes } from \"../controller/recipe.controller\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Login(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isBillingDifferent = _useState2[0],\n      setIsBillingDifferent = _useState2[1];\n\n  var _useForm = useForm(),\n      handleSubmit = _useForm.handleSubmit,\n      control = _useForm.control,\n      errors = _useForm.formState.errors;\n\n  var EMAIL_REGEX = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n  var toggleBilling = function toggleBilling() {\n    setIsBillingDifferent(function (prev) {\n      return !prev;\n    });\n  };\n\n  var onSubmit = function _callee(data) {\n    var datos, nuevoLogin;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(data.mail !== \"\" && data.password !== \"\")) {\n              _context.next = 7;\n              break;\n            }\n\n            datos = {\n              mail: data.mail,\n              password: data.password\n            };\n            console.log(datos);\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(login(datos));\n\n          case 5:\n            nuevoLogin = _context.sent;\n\n            if (nuevoLogin.rdo == 0) {\n              alert('Usuario logueado con exito');\n              navigation.navigate('Inicio');\n            } else {\n              alert('Reintente nuevamente');\n            }\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Controller, {\n      defaultValue: \"\",\n      name: \"mail\",\n      rules: {\n        required: {\n          value: true,\n          message: 'El Correo Electrónico es obligatorio'\n        },\n        pattern: {\n          value: EMAIL_REGEX,\n          message: 'El correo electronico es invalido'\n        }\n      },\n      control: control,\n      render: function render(_ref2) {\n        var _errors$mail;\n\n        var _ref2$field = _ref2.field,\n            onChange = _ref2$field.onChange,\n            mail = _ref2$field.mail;\n        return _jsx(Input, {\n          error: errors.mail,\n          errorText: (_errors$mail = errors.mail) == null ? void 0 : _errors$mail.message,\n          onChangeText: function onChangeText(mail) {\n            return onChange(mail);\n          },\n          value: mail,\n          placeholder: \"Correo Electr\\xF3nico\"\n        });\n      }\n    }), _jsx(Controller, {\n      defaultValue: \"\",\n      name: \"password\",\n      rules: {\n        required: {\n          value: true,\n          message: 'La contraseña es obligatoria'\n        }\n      },\n      control: control,\n      render: function render(_ref3) {\n        var _errors$password;\n\n        var _ref3$field = _ref3.field,\n            onChange = _ref3$field.onChange,\n            password = _ref3$field.password;\n        return _jsx(Input, {\n          error: errors.password,\n          errorText: (_errors$password = errors.password) == null ? void 0 : _errors$password.message,\n          onChangeText: function onChangeText(password) {\n            return onChange(password);\n          },\n          value: password,\n          secureTextEntry: true,\n          placeholder: \"Contrase\\xF1a\"\n        });\n      }\n    }), _jsx(Text, {\n      style: styles.olvidoPass,\n      onPress: function onPress() {\n        return navigation.navigate('OlvidePassword');\n      },\n      children: \" \\xBFOlvidaste tu contrase\\xF1a?\"\n    }), _jsx(Button, {\n      onPress: handleSubmit(onSubmit),\n      label: \"Ingresar\"\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: [t.flex1, t.justifyCenter, t.itemsCenter, t.p6, {\n    backgroundColor: \"#222121\"\n  }],\n  olvidoPass: {\n    textAlign: 'center',\n    color: \"#F7456A\"\n  }\n});","map":{"version":3,"names":["React","useState","t","color","Input","Button","useForm","Controller","AsyncStorage","login","getBestRecipes","getRecipes","Login","navigation","route","isBillingDifferent","setIsBillingDifferent","handleSubmit","control","errors","formState","EMAIL_REGEX","toggleBilling","prev","onSubmit","data","mail","password","datos","console","log","nuevoLogin","rdo","alert","navigate","styles","container","required","value","message","pattern","field","onChange","olvidoPass","StyleSheet","create","flex1","justifyCenter","itemsCenter","p6","backgroundColor","textAlign"],"sources":["/Users/juancruzlafranconi/Documents/AppMobile/cocinAR-G10-main/cocinAR-G10-main/Screens/Login.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { StyleSheet, Switch, Text, View } from 'react-native';\nimport { t, color } from 'react-native-tailwindcss';\n\nimport Input from '../Components/Input'\nimport Button from '../Components/Button';\n\nimport { useForm, Controller } from 'react-hook-form';\n\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nimport { login } from '../controller/user.controller';\n\nimport { getBestRecipes, getRecipes } from '../controller/recipe.controller';\n\nexport default function Login({ navigation, route }) {\n  const [isBillingDifferent, setIsBillingDifferent] = useState(false);\n  const { handleSubmit, control, formState: { errors } } = useForm();\n\n  const EMAIL_REGEX = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n\n  const toggleBilling = () => {\n    setIsBillingDifferent((prev) => !prev);\n  };\n\n\n  const onSubmit = async function(data){\n    if (data.mail!==\"\" && data.password!==\"\")\n    {\n      let datos = {\n        mail: data.mail,\n        password: data.password,\n      }\n      console.log(datos)\n      let nuevoLogin = await login(datos)\n      if(nuevoLogin.rdo==0){\n        alert('Usuario logueado con exito')\n        navigation.navigate('Inicio')\n      }\n      else{\n        alert('Reintente nuevamente')\n      }\n    }\n  };\n\n\n\n\n  return (\n    <View style={styles.container}>\n        <Controller\n        defaultValue=\"\"\n        name=\"mail\"\n        rules={{required:{\n            value: true,\n            message: 'El Correo Electrónico es obligatorio'\n        },\n        pattern:{\n            value: EMAIL_REGEX,\n            message: 'El correo electronico es invalido'\n        }\n    }}\n        control={control}\n        render={({ field: { onChange, mail } }) => (\n            <Input\n                error={errors.mail}\n                errorText={errors.mail?.message}\n                onChangeText={(mail) => onChange(mail)}\n                value={mail}\n                placeholder=\"Correo Electrónico\"\n            />\n        )}\n        />\n        <Controller\n        defaultValue=\"\"\n        name=\"password\"\n        rules={{required:{\n            value: true,\n            message: 'La contraseña es obligatoria'\n        }}}\n        control={control}\n        render={({ field: { onChange, password } }) => (\n            <Input\n                error={errors.password}\n                errorText={errors.password?.message}\n                onChangeText={(password) => onChange(password)}\n                value={password}\n                secureTextEntry\n                placeholder=\"Contraseña\"\n            />\n        )}\n        />\n        <Text style={styles.olvidoPass} onPress={() => navigation.navigate('OlvidePassword')}> ¿Olvidaste tu contraseña?</Text>\n      <Button onPress={handleSubmit(onSubmit)} label=\"Ingresar\" />\n\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n    container: [t.flex1, t.justifyCenter, t.itemsCenter, t.p6, {backgroundColor: \"#222121\"}],\n    olvidoPass: {textAlign: 'center', color: \"#F7456A\"}\n  \n  });"],"mappings":"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"},"metadata":{},"sourceType":"module"}