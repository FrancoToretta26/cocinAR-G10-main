{"ast":null,"code":"\"use strict\";\n\nvar _reactJsxRuntime = require(\"react/jsx-runtime\");\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"@babel/runtime/helpers/inherits\");\n\nvar _possibleConstructorReturn = require(\"@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"@babel/runtime/helpers/getPrototypeOf\");\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar tslib_1 = require(\"tslib\");\n\nvar React = tslib_1.__importStar(require(\"react\"));\n\nvar react_native_1 = require(\"react-native-web/dist/index\");\n\nvar react_native_bounceable_1 = tslib_1.__importDefault(require(\"@freakycoder/react-native-bounceable\"));\n\nvar CounterInput_style_1 = tslib_1.__importStar(require(\"./CounterInput.style\"));\n\nvar plusIconWhite = require(\"./local-assets/plus-white.png\");\n\nvar minusIconWhite = require(\"./local-assets/minus-white.png\");\n\nvar plusIconBlack = require(\"./local-assets/plus-black.png\");\n\nvar minusIconBlack = require(\"./local-assets/minus-black.png\");\n\nvar CounterInput = function (_React$Component) {\n  _inherits(CounterInput, _React$Component);\n\n  var _super = _createSuper(CounterInput);\n\n  function CounterInput(props) {\n    var _this;\n\n    _classCallCheck(this, CounterInput);\n\n    _this = _super.call(this, props);\n\n    _this.handleOnIncreasePress = function () {\n      var _this$props = _this.props,\n          onChange = _this$props.onChange,\n          onIncreasePress = _this$props.onIncreasePress;\n\n      _this.setState({\n        isPressed: true,\n        counter: _this.state.counter + 1\n      }, function () {\n        onIncreasePress && onIncreasePress(_this.state.counter);\n        onChange && onChange(_this.state.counter);\n      });\n    };\n\n    _this.handleOnDecreasePress = function () {\n      var _this$props2 = _this.props,\n          onChange = _this$props2.onChange,\n          onDecreasePress = _this$props2.onDecreasePress;\n\n      _this.setState({\n        isPressed: false,\n        counter: _this.state.counter - 1\n      }, function () {\n        onDecreasePress && onDecreasePress(_this.state.counter);\n        onChange && onChange(_this.state.counter);\n      });\n    };\n\n    _this.handleOnChangeText = function (text) {\n      var _this$props3 = _this.props,\n          onChange = _this$props3.onChange,\n          onChangeText = _this$props3.onChangeText;\n\n      var _number = parseInt(text) || 0;\n\n      _this.setState({\n        counter: _number\n      }, function () {\n        onChangeText && onChangeText(_this.state.counter);\n        onChange && onChange(_this.state.counter);\n      });\n    };\n\n    _this.renderIncreaseCounter = function () {\n      var _this$props4 = _this.props,\n          _this$props4$ImageCom = _this$props4.ImageComponent,\n          ImageComponent = _this$props4$ImageCom === void 0 ? react_native_1.Image : _this$props4$ImageCom,\n          _this$props4$increase = _this$props4.increaseButtonBackgroundColor,\n          increaseButtonBackgroundColor = _this$props4$increase === void 0 ? \"#0b349a\" : _this$props4$increase;\n      var isPressed = _this.state.isPressed;\n      return _reactJsxRuntime.jsx(react_native_bounceable_1.default, {\n        style: CounterInput_style_1._increaseButtonStyle(isPressed, increaseButtonBackgroundColor),\n        bounceEffect: 0.8,\n        bounceFriction: 2,\n        onPress: _this.handleOnIncreasePress,\n        children: _reactJsxRuntime.jsx(ImageComponent, {\n          style: CounterInput_style_1.default.buttonImageStyle,\n          source: isPressed ? plusIconWhite : plusIconBlack\n        })\n      });\n    };\n\n    _this.renderDecreaseCounter = function () {\n      var _this$props5 = _this.props,\n          _this$props5$ImageCom = _this$props5.ImageComponent,\n          ImageComponent = _this$props5$ImageCom === void 0 ? react_native_1.Image : _this$props5$ImageCom,\n          _this$props5$decrease = _this$props5.decreaseButtonBackgroundColor,\n          decreaseButtonBackgroundColor = _this$props5$decrease === void 0 ? \"#0b349a\" : _this$props5$decrease;\n      var isPressed = _this.state.isPressed;\n      return _reactJsxRuntime.jsx(react_native_bounceable_1.default, {\n        style: CounterInput_style_1._decreaseButtonStyle(isPressed, decreaseButtonBackgroundColor),\n        bounceEffect: 0.8,\n        bounceFriction: 2,\n        onPress: _this.handleOnDecreasePress,\n        children: _reactJsxRuntime.jsx(ImageComponent, {\n          style: CounterInput_style_1.default.buttonImageStyle,\n          source: isPressed ? minusIconBlack : minusIconWhite\n        })\n      });\n    };\n\n    _this.renderTextInput = function () {\n      var counter = _this.state.counter;\n      return _reactJsxRuntime.jsx(react_native_1.TextInput, {\n        numberOfLines: 1,\n        keyboardType: \"numeric\",\n        style: CounterInput_style_1.default.textInputStyle,\n        onChangeText: function onChangeText(text) {\n          return _this.handleOnChangeText(text);\n        },\n        children: counter\n      });\n    };\n\n    _this.state = {\n      counter: props.initial || 0,\n      isPressed: true\n    };\n    return _this;\n  }\n\n  _createClass(CounterInput, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props6 = this.props,\n          style = _this$props6.style,\n          _this$props6$horizont = _this$props6.horizontal,\n          horizontal = _this$props6$horizont === void 0 ? false : _this$props6$horizont,\n          _this$props6$backgrou = _this$props6.backgroundColor,\n          backgroundColor = _this$props6$backgrou === void 0 ? \"#fff\" : _this$props6$backgrou,\n          _this$props6$width = _this$props6.width,\n          width = _this$props6$width === void 0 ? horizontal ? 170 : undefined : _this$props6$width,\n          _this$props6$borderRa = _this$props6.borderRadius,\n          borderRadius = _this$props6$borderRa === void 0 ? 24 : _this$props6$borderRa;\n      return _reactJsxRuntime.jsxs(react_native_1.View, {\n        style: [CounterInput_style_1._container(width, horizontal, backgroundColor, borderRadius), style],\n        children: [this.renderDecreaseCounter(), this.renderTextInput(), this.renderIncreaseCounter()]\n      });\n    }\n  }]);\n\n  return CounterInput;\n}(React.Component);\n\nexports.default = CounterInput;","map":{"version":3,"sources":["../../lib/CounterInput.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\nconst React = tslib_1.__importStar(require(\"react\"));\nconst react_native_1 = require(\"react-native\");\nconst react_native_bounceable_1 = tslib_1.__importDefault(require(\"@freakycoder/react-native-bounceable\"));\n/**\n * ? Local Imports\n */\nconst CounterInput_style_1 = tslib_1.__importStar(require(\"./CounterInput.style\"));\n// ? White Assets\nconst plusIconWhite = require(\"./local-assets/plus-white.png\");\nconst minusIconWhite = require(\"./local-assets/minus-white.png\");\n// ? Black Assets\nconst plusIconBlack = require(\"./local-assets/plus-black.png\");\nconst minusIconBlack = require(\"./local-assets/minus-black.png\");\nclass CounterInput extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleOnIncreasePress = () => {\n            const { onChange, onIncreasePress } = this.props;\n            this.setState({ isPressed: true, counter: this.state.counter + 1 }, () => {\n                onIncreasePress && onIncreasePress(this.state.counter);\n                onChange && onChange(this.state.counter);\n            });\n        };\n        this.handleOnDecreasePress = () => {\n            const { onChange, onDecreasePress } = this.props;\n            this.setState({ isPressed: false, counter: this.state.counter - 1 }, () => {\n                onDecreasePress && onDecreasePress(this.state.counter);\n                onChange && onChange(this.state.counter);\n            });\n        };\n        this.handleOnChangeText = (text) => {\n            const { onChange, onChangeText } = this.props;\n            let _number = parseInt(text) || 0;\n            this.setState({ counter: _number }, () => {\n                onChangeText && onChangeText(this.state.counter);\n                onChange && onChange(this.state.counter);\n            });\n        };\n        /* -------------------------------------------------------------------------- */\n        /*                               Render Methods                               */\n        /* -------------------------------------------------------------------------- */\n        this.renderIncreaseCounter = () => {\n            const { ImageComponent = react_native_1.Image, increaseButtonBackgroundColor = \"#0b349a\", } = this.props;\n            const { isPressed } = this.state;\n            return (<react_native_bounceable_1.default style={CounterInput_style_1._increaseButtonStyle(isPressed, increaseButtonBackgroundColor)} bounceEffect={0.8} bounceFriction={2} onPress={this.handleOnIncreasePress}>\n        <ImageComponent style={CounterInput_style_1.default.buttonImageStyle} source={isPressed ? plusIconWhite : plusIconBlack}/>\n      </react_native_bounceable_1.default>);\n        };\n        this.renderDecreaseCounter = () => {\n            const { ImageComponent = react_native_1.Image, decreaseButtonBackgroundColor = \"#0b349a\", } = this.props;\n            const { isPressed } = this.state;\n            return (<react_native_bounceable_1.default style={CounterInput_style_1._decreaseButtonStyle(isPressed, decreaseButtonBackgroundColor)} bounceEffect={0.8} bounceFriction={2} onPress={this.handleOnDecreasePress}>\n        <ImageComponent style={CounterInput_style_1.default.buttonImageStyle} source={isPressed ? minusIconBlack : minusIconWhite}/>\n      </react_native_bounceable_1.default>);\n        };\n        this.renderTextInput = () => {\n            const { counter } = this.state;\n            return (<react_native_1.TextInput numberOfLines={1} keyboardType=\"numeric\" style={CounterInput_style_1.default.textInputStyle} onChangeText={(text) => this.handleOnChangeText(text)}>\n        {counter}\n      </react_native_1.TextInput>);\n        };\n        this.state = {\n            counter: props.initial || 0,\n            isPressed: true,\n        };\n    }\n    render() {\n        const { style, horizontal = false, backgroundColor = \"#fff\", width = horizontal ? 170 : undefined, borderRadius = 24, } = this.props;\n        return (<react_native_1.View style={[\n            CounterInput_style_1._container(width, horizontal, backgroundColor, borderRadius),\n            style,\n        ]}>\n        {this.renderDecreaseCounter()}\n        {this.renderTextInput()}\n        {this.renderIncreaseCounter()}\n      </react_native_1.View>);\n    }\n}\nexports.default = CounterInput;\n//# sourceMappingURL=CounterInput.js.map"]},"metadata":{},"sourceType":"script"}