{"ast":null,"code":"function _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport LogBox from \"react-native-web/dist/exports/LogBox\";\n\nif (__DEV__) {\n  var ignoreWarns = [\"EventEmitter.removeListener\", \"[fuego-swr-keys-from-collection-path]\", \"Setting a timer for a long period of time\", \"ViewPropTypes will be removed from React Native\", \"AsyncStorage has been extracted from react-native\", \"exported from 'deprecated-react-native-prop-types'.\", \"Non-serializable values were found in the navigation state.\", \"VirtualizedLists should never be nested inside plain ScrollViews\", 'ViewPropTypes will be removed from React Native. Migrate to ViewPropTypes exported from deprecated-react-native-prop-types'];\n  var warn = console.warn;\n\n  console.warn = function () {\n    for (var _len = arguments.length, arg = new Array(_len), _key = 0; _key < _len; _key++) {\n      arg[_key] = arguments[_key];\n    }\n\n    for (var _iterator = _createForOfIteratorHelperLoose(ignoreWarns), _step; !(_step = _iterator()).done;) {\n      var warning = _step.value;\n\n      if (arg[0].startsWith(warning)) {\n        return;\n      }\n    }\n\n    warn.apply(void 0, arg);\n  };\n\n  LogBox.ignoreLogs(ignoreWarns);\n}","map":{"version":3,"names":["__DEV__","ignoreWarns","warn","console","arg","warning","startsWith","LogBox","ignoreLogs"],"sources":["/Users/juancruzlafranconi/Documents/AppMobile/cocinAR-G10-main/cocinAR-G10-main/ignoreWarnings.js"],"sourcesContent":["import { LogBox } from \"react-native\";\n\nif (__DEV__) {\n  const ignoreWarns = [\n    \"EventEmitter.removeListener\",\n    \"[fuego-swr-keys-from-collection-path]\",\n    \"Setting a timer for a long period of time\",\n    \"ViewPropTypes will be removed from React Native\",\n    \"AsyncStorage has been extracted from react-native\",\n    \"exported from 'deprecated-react-native-prop-types'.\",\n    \"Non-serializable values were found in the navigation state.\",\n    \"VirtualizedLists should never be nested inside plain ScrollViews\",\n    'ViewPropTypes will be removed from React Native. Migrate to ViewPropTypes exported from deprecated-react-native-prop-types'\n  ];\n\n  const warn = console.warn;\n  console.warn = (...arg) => {\n    for (const warning of ignoreWarns) {\n      if (arg[0].startsWith(warning)) {\n        return;\n      }\n    }\n    warn(...arg);\n  };\n\n  LogBox.ignoreLogs(ignoreWarns);\n}"],"mappings":";;;;;;;;AAEA,IAAIA,OAAJ,EAAa;EACX,IAAMC,WAAW,GAAG,CAClB,6BADkB,EAElB,uCAFkB,EAGlB,2CAHkB,EAIlB,iDAJkB,EAKlB,mDALkB,EAMlB,qDANkB,EAOlB,6DAPkB,EAQlB,kEARkB,EASlB,4HATkB,CAApB;EAYA,IAAMC,IAAI,GAAGC,OAAO,CAACD,IAArB;;EACAC,OAAO,CAACD,IAAR,GAAe,YAAY;IAAA,kCAARE,GAAQ;MAARA,GAAQ;IAAA;;IACzB,qDAAsBH,WAAtB,wCAAmC;MAAA,IAAxBI,OAAwB;;MACjC,IAAID,GAAG,CAAC,CAAD,CAAH,CAAOE,UAAP,CAAkBD,OAAlB,CAAJ,EAAgC;QAC9B;MACD;IACF;;IACDH,IAAI,MAAJ,SAAQE,GAAR;EACD,CAPD;;EASAG,MAAM,CAACC,UAAP,CAAkBP,WAAlB;AACD"},"metadata":{},"sourceType":"module"}